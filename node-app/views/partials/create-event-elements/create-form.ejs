<style>
  /* Main container style */
  .form-container {
    width: 600px;
    background: linear-gradient(#212121, #212121) padding-box,
    linear-gradient(145deg, transparent 15%, #e81cff, #40c9ff) border-box;
    border: 3px solid transparent;
    padding: 32px 24px;
    font-size: 14px;
    font-family: inherit;
    color: white;
    display: flex;
    flex-direction: column;
    gap: 20px;
    box-sizing: border-box;
    border-radius: 16px;
    background-size: 200% 100%;
    animation: gradient 5s ease infinite;
  }
  @keyframes gradient {
  0% {
    background-position: 0% 10%;
  }

  50% {
    background-position: 100% 50%;
  }

  100% {
    background-position: 0% 10%;
  }
}

  /* Form styles */
  .form-container .form {
    display: flex;
    flex-direction: column;
    gap: 20px;
  }

  .form-container .form-group {
    display: flex;
    flex-direction: column;
    gap: 2px;
  }

  .form-container .form-group label {
    color: #717171;
    font-weight: 600;
    font-size: 12px;
  }

  /* Shared styles for input, select, and textarea */
  .form-container .form-group input,
  .form-container .form-group select,
  .form-container .form-group textarea,
  .form-container .form-group date {
    width: 100%;
    padding: 12px 16px;
    /* Ensure padding is identical */
    font-size: 14px;
    /* Match font size */
    line-height: 1.5;
    /* Consistent line height */
    border-radius: 8px;
    color: #fff;
    font-family: inherit;
    background-color: transparent;
    border: 1px solid #414141;
    outline: none;
    box-sizing: border-box;
    /* Ensure consistent sizing */
  }

  /* Placeholder styling */
  .form-container .form-group input::placeholder {
    opacity: 0.5;
  }

  /* Focus states */
  .form-container .form-group input:focus,
  .form-container .form-group select:focus,
  .form-container .form-group textarea:focus {
    border-color: #e81cff;
  }

  /* Select dropdown specific styling */
  .form-container .form-group select {
    appearance: none;
    /* Removes default arrow in some browsers */
    background: transparent;
    background-image: url('data:image/svg+xml;base64,...');
    /* Optional custom arrow icon */
    background-repeat: no-repeat;
    background-position: right 10px center;
    background-size: 12px;
  }

  /* Button styling */
  .form-container .form-submit-btn {
    width: 40%;
    color: #717171;
    font-weight: 600;
    background: #313131;
    border: 1px solid #414141;
    padding: 12px 16px;
    font-size: inherit;
    cursor: pointer;
    border-radius: 6px;
    margin-top: 8px;
    align-self: ;
  }

  .form-container .form-submit-btn:hover {
    background-color: #fff;
    border-color: #fff;
  }
</style>

<div id="form-container" class=" h-full mx-1 border border-black flex flex-row gap-4 p-2">

  <div class="w-full border border-black">

  </div>

  <div class="w-full flex items-center justify-center">

    <div class="form-container">
      <!--Form -->
      <form class="form" id="form-inputs" >

        <!-- Form Container  -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-3">

          <!-- Event Name  -->
          <div class="col-span-1 form-group">
            <label for="event-name">Event Name</label>
            <input required="" name="email" id="email" type="text">
          </div>

          <!--Event type-->
          <div class="col-span-2 form-group">
            <label for="event-type">Type of Event</label>
            <select id="event-type" name="Type-of-Event">
              <option value="" disabled selected></option>
              <option value="Corporate Events">Corporate Events</option>
              <option value="Convention">Convention</option>
              <option value="Fundraisers">Fundraisers</option>
              <option value="Parties">Parties</option>
              <option value="Seminars">Seminars</option>
              <option value="Weddings">Weddings</option>
            </select>
          </div>

          <!--Event Date-->
          <div class="form-group col-span-1">
            <label for="event-date">Event Date</label>
            <input required name="event-date" id="event-date" type="date">
          </div>

          <!-- Province -->
          <div id="province-container" class="form-group col-span-2">
            <label for="province">Select Province</label>
            <select id="province" name="Province">
              <option value="" disabled selected>Select a province</option>
              <option value="Alberta">Alberta</option>
              <option value="British Columbia">British Columbia</option>
              <option value="Manitoba">Manitoba</option>
              <option value="New Brunswick">New Brunswick</option>
              <option value="Newfoundland and Labrador">Newfoundland and Labrador</option>
              <option value="Nova Scotia">Nova Scotia</option>
              <option value="Ontario">Ontario</option>
              <option value="Prince Edward Island">Prince Edward Island</option>
              <option value="Quebec">Quebec</option>
              <option value="Saskatchewan">Saskatchewan</option>
              <option value="Yukon">Yukon</option>
              <option value="Northwest Territories">Northwest Territories</option>
              <option value="Nunavut">Nunavut</option>
            </select>
          </div>


          <!-- Budget -->
          <div id="budget-container" class="form-group col-span-1">
            <label for="budget">Budget (in CAD)</label>
            <input id="budget" type="number" name="Budget" min="0" placeholder="Enter your budget">
          </div>

          <!-- Number of Guests -->
          <div id="guests-container" class="form-group col-span-2">
            <label for="guests"">Number of Guests</label>
            <select id=" guests" name="Number-of-Guests">
              <option value="" disabled selected>Select capacity</option>
              <option value="1-10 Guests">1-10 Guests</option>
              <option value="11-20 Guests">11-20 Guests</option>
              <option value="21-30 Guests">21-30 Guests</option>
              <option value="31-40 Guests">31-40 Guests</option>
              <option value="50+ Guests">50+ Guests</option>
              </select>
          </div>

          <div class="form-group col-span-3 row-span-1">
            <label for="textarea">Event Description</label>
            <textarea required="" cols="50" rows="3" id="textarea" name="textarea">          </textarea>
          </div>

            <div class="row-span-1 col-span-3 flex flex-row justify-center">
            <button type="submit" class="form-submit-btn">Submit</button>
            </div>
          
          
        </div>

      </form>
    </div>

    </form>
  </div>

</div>

</div>

<script>
  // Toggle end date visibility based on "One-day Event" checkbox
  document.getElementById('one-day-event-checkbox').addEventListener('change', function () {
    const endDateContainer = document.getElementById('end-date-container');
    endDateContainer.style.display = this.checked ? 'none' : 'block';
  });

  document.getElementById('create-event-form').addEventListener('submit', async function (event) {
    event.preventDefault();

    // Get form values
    const event_name = document.getElementById('event-name').value;
    const event_type = document.getElementById('event-type').value;
    const guests = document.getElementById('guests').value;
    const start_date = document.getElementById('start-date').value;
    const one_day_event = document.getElementById('one-day-event-checkbox').checked;
    const end_date = one_day_event ? start_date : document.getElementById('end-date').value;
    const budget = document.getElementById('budget').value;

    // Validate inputs
    if (!event_name || !event_type || !guests || !start_date || (!one_day_event && !end_date) || !budget) {
      alert("Please fill out all fields.");
      return;
    }

    // Prepare the data to send
    const data = { event_name, event_type, guests, start_date, end_date, one_day_event, budget };
    console.log(data);

    // Continue with your form submission logic here...
  });
</script>



<!-- REAL DATA-->
<script>
  document.getElementById('create-event-form').addEventListener('submit', async function (event) {
    event.preventDefault();

    // Get form values
    const event_name = document.getElementById('event-name').value;
    const event_type = document.getElementById('event-type').value;
    const guests = document.getElementById('guests').value;
    const start_date = document.getElementById('start-date').value;
    const end_date = document.getElementById('end-date').value;
    const province = document.getElementById('province').value;
    const budget = document.getElementById('budget').value;

    // Validate inputs
    if (!event_name || !event_type || !guests || !start_date || !end_date || !province || !budget) {
      alert("Please fill out all fields.");
      return;
    }

    // Prepare the data to send
    const data = { event_name, event_type, guests, start_date, end_date, province, budget };
    console.log(province);
    console.log(budget);

    try {
      // Show loader overlay
      const loader = document.getElementById("loader");
      loader.classList.remove("hidden");

      // Send the data to the Flask API
      const response = await fetch('http://127.0.0.1:5000/spea-2', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(data)
      });

      if (response.ok) {


        // Parse the response (an array of venues)
        const venues = await response.json();
        console.log(venues);

        // Store the data in sessionStorage for the next page
        sessionStorage.setItem('venues', JSON.stringify(venues));


        // Store the province in sessionStorage for the next page
        sessionStorage.setItem('province', province);
        sessionStorage.setItem('budget', budget);

        // Redirect to the recommendation page
        window.location.href = `/main-web-page/recomendation-page1`;

      } else {
        const error = await response.json();
        alert('Error: ' + error.message);
      }
    } catch (error) {
      console.error('Error:', error);
      alert('Something went wrong!');
    }
  });


</script>