<div class="container mx-auto p-6">
    <h1 class="text-3xl font-bold mb-6 text-center">Recommended Venues</h1>
    <div id="venue-list" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        <!-- Venue options will be populated here dynamically -->
    </div>

    <div class="mt-6 text-center">
        <h2 class="text-xl font-semibold mb-4">Already Have a Venue?</h2>
        <button id="use-private-venue" class="bg-blue-600 text-white px-6 py-3 rounded-lg hover:bg-blue-700 transition duration-200">
            Use My Private Home
        </button>
    </div>
    
    <div class="mt-6 text-center">
        <button id="next-page" class="bg-green-600 text-white px-6 py-3 rounded-lg hover:bg-green-700 transition duration-200 disabled:opacity-50" disabled>
            Next Page
        </button>
    </div>
</div>

<script>
    // Retrieve venues from sessionStorage
let storedData = sessionStorage.getItem('venues');

try {
    // Parse the outer JSON string
    const parsedData = JSON.parse(storedData);
    
    // Check if the parsed data contains the venues array
    if (Array.isArray(parsedData.venues)) {
        venues = parsedData.venues; // Use the venues array
    } else {
        throw new Error('Venues data is not an array');
    }
} catch (error) {
    console.error('Failed to parse venues:', error);
    venues = []; // Fallback to an empty array if parsing fails
}

const venueList = document.getElementById('venue-list');
let selectedVenueId = null;

// Function to display venues
function displayVenues() {
    venues.forEach((venue, index) => {
        const venueDiv = document.createElement('div');
        venueDiv.className =
            "border rounded-lg overflow-hidden shadow-lg transition-transform transform hover:scale-105 cursor-pointer";
        venueDiv.setAttribute('data-id', index); // Use index as ID

        venueDiv.innerHTML = `
            <div class="p-4">
                <h3 class="text-xl font-semibold text-blue-600">Latitude: ${venue.Latitude}</h3>
                <p class="text-gray-700">Longitude: ${venue.Longitude}</p>
                <p class="text-gray-700">CO2 Emission: ${venue.Co2Emission} g</p>
                <p class="text-gray-700">Cost: $${venue.Price}</p>
                <p class="text-gray-700">Distance: ${venue.Distance} km</p>
            </div>
        `;

        venueDiv.onclick = () => selectVenue(index);
        venueList.appendChild(venueDiv);
    });
}

// Function to handle venue selection
function selectVenue(id) {
    selectedVenueId = id;

    document.querySelectorAll('#venue-list div').forEach(div => {
        div.classList.remove('bg-green-200', 'bg-opacity-50');
    });

    const selectedDiv = document.querySelector(`#venue-list div[data-id="${id}"]`);
    selectedDiv.classList.add('bg-green-200', 'bg-opacity-50');
    document.getElementById('next-page').disabled = false;
}

// Event listener for the private venue button
document.getElementById('use-private-venue').onclick = () => {
    alert('You have selected your private home.');
};

// Event listener for the next page button
document.getElementById('next-page').onclick = () => {
    if (selectedVenueId !== null) {
        alert(`You selected Venue ID: ${selectedVenueId}`);
    } else {
        alert('Please select a venue before proceeding.');
    }
};

// Initialize the display of venues
displayVenues();

</script>

<style>
    /* Additional styles can be added here if needed */
</style>
