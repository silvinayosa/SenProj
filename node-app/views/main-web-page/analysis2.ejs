<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Deck.gl Canadian Province Map</title>
    <script src="https://unpkg.com/mapbox-gl/dist/mapbox-gl.js"></script>
    <script src="https://unpkg.com/@deck.gl/core@latest"></script>
    <script src="https://unpkg.com/@deck.gl/layers@latest"></script>
    <script src="https://unpkg.com/topojson-client"></script>
    <link href="https://unpkg.com/mapbox-gl/dist/mapbox-gl.css" rel="stylesheet" />
    <style>
        body { margin: 0; padding: 0; }
        #map { width: 100%; height: 100vh; }
    </style>
</head>
<body>
    <div id="map"></div>
    <script>
        mapboxgl.accessToken = 'YOUR_MAPBOX_ACCESS_TOKEN'; // Replace with your Mapbox token
        const map = new mapboxgl.Map({
            container: 'map',
            style: 'mapbox://styles/mapbox/light-v10', // Choose a style
            center: [-106, 56], // Centered on Canada
            zoom: 3
        });

        // Load your TopoJSON data
        fetch('path/to/canadaprovtopo.topojson') // Ensure this path is correct
            .then(response => {
                if (!response.ok) throw new Error('Network response was not ok');
                return response.json();
            })
            .then(topoData => {
                const provinces = topojson.feature(topoData, topoData.objects.provinces); // Adjust according to your TopoJSON structure

                // Create a Deck.gl layer
                const layer = new deck.GeoJsonLayer({
                    id: 'geojson-layer',
                    data: provinces,
                    filled: true,
                    lineWidthMinPixels: 1,
                    getFillColor: [100, 200, 255, 180], // RGBA fill color
                    getLineColor: [255, 255, 255],
                    pickable: true,
                    onClick: info => {
                        alert(`Clicked on ${info.object.properties.name}`);
                    }
                });

                const deckgl = new deck.DeckGL({
                    container: 'map',
                    mapboxApiAccessToken: mapboxgl.accessToken,
                    layers: [layer],
                    initialViewState: {
                        longitude: -106,
                        latitude: 56,
                        zoom: 3,
                        pitch: 0,
                        bearing: 0
                    },
                    controller: true
                });
            })
            .catch(error => console.error('Error loading the TopoJSON data:', error));
    </script>
</body>
</html>
